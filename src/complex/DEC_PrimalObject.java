/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package complex;

//  Generated by StarUML(tm) Java Add-In

import containers.DEC_GeometricContainer;
import exceptions.DEC_Exception;
import utils.IndexSet;
import java.util.ArrayList;
import processing.core.PVector;
import utils.GeometricUtils;


//
//  @ Project : Untitled
//  @ File Name : DEC_PrimalObject.java
//  @ Date : 14/02/2016
//  @ Author : 
//
//
public class DEC_PrimalObject extends DEC_Object {

 public DEC_PrimalObject() {
 }

 public DEC_PrimalObject(int index) {
  super(index);
 }

 public DEC_PrimalObject(IndexSet vertices) throws DEC_Exception {
  super(vertices);
 }

 public DEC_PrimalObject(IndexSet vertices, int index) throws DEC_Exception {
  super(vertices, index);
 }

 public DEC_PrimalObject(IndexSet vertices, int index, int orientation) throws DEC_Exception {
  super(vertices, index, orientation);
 }
 
 public DEC_PrimalObject(DEC_Object object) throws DEC_Exception{
  super(object.getVertices(),object.getIndex(),object.getOrientation(),object.scalarContent,object.vectorContent);
  
 }
 @Override
 public float volume(DEC_GeometricContainer container) throws DEC_Exception{
  ArrayList<PVector> geometricInfo = getGeometry(container);
  return GeometricUtils.volume(geometricInfo);
 }
	
 public ArrayList<PVector> getGeometry(DEC_GeometricContainer geometricContainer) throws DEC_Exception{
  return geometricContainer.getGeometricContent(this);
 }

 @Override
 public ArrayList<DEC_Object> boundary() throws DEC_Exception {
  ArrayList<DEC_Object> bounds = new ArrayList<DEC_Object>();
  if(dimension()==0){
   return bounds;
  }else if(dimension()==1){
   if(getOrientation()>0){
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(1)),-1,orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0)),-1,-orientation));
   }else{
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(1)),-1,orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0)),-1,-orientation));
   }
  }else if(dimension()==2){
   if(getOrientation()>0){
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(1),vertices.getIndex(2)),-1,orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(2)),-1,-orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(1)),-1,orientation));
   }else{
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(1),vertices.getIndex(2)),-1,-orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(2)),-1,orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(1)),-1,-orientation));
   }
  }else if(dimension()==3){
   if(getOrientation()>0){
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(1),vertices.getIndex(2),vertices.getIndex(3)),-1,orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(2),vertices.getIndex(3)),-1,-orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(1),vertices.getIndex(3)),-1,orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(1),vertices.getIndex(2)),-1,-orientation));
   }else{
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(1),vertices.getIndex(2),vertices.getIndex(3)),-1,-orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(2),vertices.getIndex(3)),-1,orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(1),vertices.getIndex(3)),-1,-orientation));
    bounds.add(new DEC_Object(new IndexSet(vertices.getIndex(0),vertices.getIndex(1),vertices.getIndex(2)),-1,orientation));
   }
  }
  return bounds;
 }
}
